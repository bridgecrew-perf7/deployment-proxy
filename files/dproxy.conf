# All values can be overwritten by using environment variables.
# default environment file /etc/default/dproxy
# set environment file export ENV_FILE=
# default configuration file /etc/deployment/dproxy.conf
# set configuration file export CONFIG_FILE=

# hostname to use for the deployment-proxy
# must be resolveable and reachable from the deployment-api and deployment-clients
HOSTNAME="deploy-proxy.hp.provo1.endurancemb.com"
IP="10.24.246.11"
VERSION="/api/1.0.0"

# api endpoint url for the deployment-proxy
# running on port 8002
# api version 1.0.0
DEPLOYMENT_PROXY_URI="http://$HOSTNAME:8002$VERSION"

# api endpoint url for the deployment-api
# running on port 443 behind nginx (port 8000)
# api version 1.0.0
DEPLOYMENT_API_URI="https://deployment.unifiedlayer.com$VERSION"

# the environment file to load environment variables from.
# default /etc/default/dproxy
ENV_FILE="/etc/default/dproxy"

# using redis at localhost for both celeryd broker and results
CELERY_BROKER_URL="redis://localhost:6379/0"
CELERY_RESULT_BACKEND="redis://localhost:6379/0"

# serializing message to json
CELERY_TASK_SERIALIZER="json"
CELERY_RESULT_SERIALIZER="json"
CELERY_ACCEPT_CONTENT=["json","application/text"]

# using timezone UTC
CELERY_TIMEZONE="UTC"
CELERY_UTC="True"

# Names of nodes to start
#   most people will only start one node:
CELERYD_NODES="worker1 worker2 worker3 worker4"
#   but you can also start multiple and configure settings
#   for each in CELERYD_OPTS
#CELERYD_NODES="worker1 worker2 worker3"
#   alternatively, you can specify the number of nodes to start:
#CELERYD_NODES=10

# Absolute or relative path to the 'celery' command:
CELERY_BIN="/usr/local/bin/celery"
#CELERY_BIN="/virtualenvs/def/bin/celery"

# App instance to use
# comment out this line if you don't use an app
CELERY_APP="dproxy.runner.runner:app"
# or fully qualified:
#CELERY_APP="proj.tasks:app"

# Where to chdir at start.
CELERYD_CHDIR="/opt/deployment/"

# Extra command-line arguments to the worker
CELERYD_OPTS="--time-limit=300 --concurrency=8"
# Configure node-specific settings by appending node name to arguments:
#CELERYD_OPTS="--time-limit=300 -c 8 -c:worker2 4 -c:worker3 2 -Ofair:worker1"

# Set logging level
CELERYD_LOG_LEVEL="INFO"

# %n will be replaced with the first part of the nodename.
CELERYD_LOG_FILE="/var/log/celery/%n%I.log"
CELERYD_PID_FILE="/var/run/celery/%n.pid"

# Workers should run as an unprivileged user.
#   You need to create this user manually (or you can choose
#   a user/group combination that already exists (e.g., nobody).
CELERYD_USER="hp_deploy"
CELERYD_GROUP="hp_deploy"

# If enabled pid and log directories will be created if missing,
# and owned by the userid/group configured.
CELERY_CREATE_DIRS=1

# HTTP HELPER
# number of times to retry requests
RETRY=10
# {backoff factor} * (2 ** ({number of total retries} - 1))
#For example, if the backoff factor is set to:
#1 second the successive sleeps will be 0.5, 1, 2, 4, 8, 16, 32, 64, 128, 256.
#2 seconds - 1, 2, 4, 8, 16, 32, 64, 128, 256, 512
#10 seconds - 5, 10, 20, 40, 80, 160, 320, 640, 1280, 2560
BACKOFF_FACTOR=1
# the http status codes to retry
STATUS_FORCELIST=[429, 500, 502, 503, 504]
# the http methods to retry
METHOD_WHITELIST=["HEAD", "GET", "OPTIONS", "TRACE", "DELETE", "PUT", "PATCH", "POST"]
# default timeout in seconds
DEFAULT_TIMEOUT=30